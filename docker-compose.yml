version: '3.9'
services:
 postgres:
  image: postgres:12.7
  healthcheck:
   test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "uday" ]
   timeout: 45s
   interval: 10s
   retries: 10
  restart: always
  environment: 
   - POSTGRES_USER=${POSTGRES_USER}
   - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
   - POSTGRES_DB=${POSTGRES_DB}
   - APP_DB_USER=${APP_DB_USER}
   - APP_DB_PASS=${APP_DB_PASS}
   - APP_DB_NAME=${APP_DB_NAME}
  logging:
   options:
    max-size: 10m
    max-file: "3"
  ports:
   # HOST:CONTAINER
   - '5432:5432'
  networks:
   - default
  volumes: 
   - ./postgres-data:/var/lib/postgresql/data
   # All docker files for deplployment and database script
   - ./DB/:/docker-entrypoint-initdb.d/
   # Seed file

# vachan-api app
 vachan-api:
  build:
   context: .
   dockerfile: Dockerfile
  container_name: vachan-app
  environment: 
   - VACHAN_POSTGRES_HOST=${VACHAN_POSTGRES_HOST}
   - VACHAN_POSTGRES_USER=${VACHAN_POSTGRES_USER}
   - VACHAN_POSTGRES_PASSWORD=${VACHAN_POSTGRES_PASSWORD}
   - VACHAN_POSTGRES_DATABASE=${VACHAN_POSTGRES_DATABASE}
   - VACHAN_POSTGRES_PORT=${VACHAN_POSTGRES_PORT}
  volumes:
   - ./app:/app/
  restart: always
  links:
   - postgres
  depends_on:
   - postgres
  ports:
   - 5000:5000
  networks:
   my-network:
    aliases:
     - vachan-app

# Web Server
 web-server:
  build:
   context: ./nginx
   dockerfile: Dockerfile
  environment:
   domain: ""
  ports:
   - 5001:80
   - 5002:443
  volumes:
   - ./nginx:/nginx/
  depends_on:
   - vachan-api
  networks:
   - my-network

networks:
 my-network:              
                                                                                                                                                                                                                             