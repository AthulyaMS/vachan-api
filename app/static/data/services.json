{
    "cms": {
        "title":"Content Management",
        "content":"Effective content management is crucial for VachanOnline.com and the VachanGo app, the leading Scripture Engagement platform in Indian Languages. With a streamlined content management system, administrators can organize and distribute diverse resources, including commentaries, videos, audio bibles, and reading plans. This system facilitates seamless integration of new content and ensures a wide range of offerings in multiple Indian languages. It also enables efficient management of user-generated content, fostering an interactive community of users. Content management plays a pivotal role in maintaining a dynamic and enriching Scripture Engagement experience for users.",
        "links":[
            {
                "link":"https://vachanonline.com/",
                "linkname":"Vachan Online",
                "button":false
            },

            {
                "link":"https://play.google.com/store/apps/details?id=com.bridgeconn.vachango&amp;pli=1",
                "linkname":"Vachan Go",
                "button":false
            },

            {
                "link":"https://stagingapi.vachanengine.org/v2/cms/rest/docs",
                "linkname":"Vachan-CMS Docs",
                "button":false
            }
        ]
    },
    "translation": {
        "title":"Translation APIs",
        "content":"Translation APIs are primarily designed for text translation but are now also being experimented with for sign language translation. These APIs typically rely on vocabulary-based translation techniques and token replacement methods. They excel in handling very low-resource languages and languages that are closely related. Additionally, these APIs offer translation memory and context-aware suggestion capabilities, enhancing the quality and accuracy of translations. Whether it's cloud-based projects or local projects, these translation APIs can seamlessly integrate and support various implementation scenarios. Their versatility and capabilities make them valuable tools for enabling effective language translation in a wide range of applications.",
        "links":[
            {
                "link":"https://isl.bridgeconn.com/",
                "linkname":"IntelliSign",
                "button":false
            },

            {
                "link":"https://stagingapi.vachanengine.org/v2/text/translate/token-based/docs",
                "linkname":"Vachan-TBT Docs",
                "button":false
            }
        ]
    },
    "ai": {
        "title":"AI APIs",
        "content":"AI APIs empower various AI functionalities, including Speech-to-Text, Text-to-Speech, Speech-to-Speech translation, and Text translation. We continuously strive to keep pace with recent trends by leveraging top-performing open-source models such as MMS, NLLB, SeamlessM4T, XLSR, etc. Furthermore, we are consistently fine-tuning these models for new languages. Our experiments and AI models are well-managed and tracked using an MLOps tool, which serves as both a model registry and a tracking mechanism. We provide APIs that interact with the central model registry. ",
        "links":[
            {
                "link":"https://stagingapi.vachanengine.org/v2/ai/docs",
                "linkname":"Vachan-AI Docs",
                "button":false
            }
        ]
    },
    "auth": {
        "title":"Auth & Access Management",
        "content":"Access Restriction is implemented for all the endpoints in different levels based on the APIâ€™s content priority. User level, Content level, Application level-based security is added to each endpoint. Some of the endpoints are open accessible and others are restricted to user-roles only. User with specific role permission can only access those APIs. Access to endpoints can be done with the help of authorized token. The security implemented for the Vachan Engine contents are based on Role Based Access Control (RBAC) Auwhich restricts the access based on user's role, access-tags etc.",
        "links":[
            {
                "link":"https://stagingapi.vachanengine.org/v2/auth/docs",
                "linkname":"Vachan-AUTH Docs",
                "button":false
            }
        ]
    },
    "graphql": {
        "title":"GraphQL",
        "content":"GraphQL module for Vachan Engine is a specification for web APIs that offers a compelling alternative to REST. This module serves as a middle layer between client applications and data sources. With its powerful query language, GraphQL enables declarative data fetching, eliminating the need for over-fetching or under-fetching. Initially implemented using Graphene, we are now migrating to the Strawberry library, ensuring access to the latest GraphQL advancements. It is hosted alongside our REST API services, this integration allows you to leverage the best of both worlds. While REST provides familiar GET, PUT, and POST endpoints, GraphQL empowers you with flexible and precise data retrieval.",
        "links":[
            {
                "link":"https://stagingapi.vachanengine.org/v2/graphql/",
                "linkname":"Vachan-GQL Docs",
                "button":false
            }
        ]     
    },
    "microservices": {
        "title":"Micro Services",
        "content":"Vachan Engine microservices architecture is broken down into a set of independently functioning services, each serving a specific business capability. These services communicate with each other through well-defined APIs, typically using lightweight protocols such as HTTP or messaging systems.",
        "links":[
            {
                "link":"https://miro.com/app/board/uXjVMHjqZ10=/?share_link_id=841173118462",
                "linkname":"Microservices",
                "button":false
            }
        ]
    }
}